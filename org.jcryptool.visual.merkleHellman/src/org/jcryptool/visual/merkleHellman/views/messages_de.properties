#Eclipse modern messages class
#Sun Jan 04 16:41:57 CET 2015
MerkleHellmanView_0=Merkle-Hellman ist ein asymmetrisches Kryptosystem, das auf dem Rucksack-Problem basiert. Um den Algorithmus zu starten, wählen Sie bitte die Anzahl der Elemente für den privaten Schlüssel und einen Startwert. Ein privater Schlüssel A wird automatisch zufällig erzeugt. Wenn Sie einen anderen privaten Schlüssel verwenden wollen, können Sie die Werte entweder direkt ändern oder Sie klicken auf den Button "Erzeuge privaten Schlüssel". Danach ist der öffentliche Schlüssel zu generieren\: Drücken Sie dazu auf den Button "Erzeuge öffentlichen Schlüssel".
MerkleHellmanView_00=Um eine Nachricht m zu verschlüsseln, geben Sie eine natürliche Zahl für m ein und klicken Sie auf den Button "Verschlüsseln". Jedes Bit im öffentlichen Schlüssel, das einer 1 in der binären Darstellung des Klartextes entspricht, fließt in den Geheimtext c ein (die Bits, die einer 0 entsprechen, werden bei der Konstruktion von c ignoriert). Diese Bits im öffentlichen Schlüssel werden addiert. Die resultierende Summe ist der Geheimtext c \:\= Sum( m(i) * B (i) mod M ).
MerkleHellmanView_000=Um den Geheimtext c zu entschlüsseln, berechnen wir zuerst c' \= c * U mod M. Nun wählen wir das größte Element des privaten Schlüssels A(i). Falls c' < A(i) ist, dann ist m(i) \= 0; falls c' >\= A(i) ist, dann ist m(i) \= 1. Danach subtrahieren wir A(i) * m(i) von c' so lange, bis die Differenz 0 ist. Falls die Differenz nicht 0 wird, dann wurde versucht, den Geheimtext mit einem falschen Schlüssel zu entschlüsseln.
MerkleHellmanView_0000=Merkle-Hellman Rucksack-Verschlüsselung\r\n
MerkleHellmanView_1=Schlüsselerzeugung
MerkleHellmanView_10=Binärdarstellung von m\:
MerkleHellmanView_11=Iteration
MerkleHellmanView_12=Gleichung
MerkleHellmanView_13=Verschlüsseln
MerkleHellmanView_14=Entschlüsselung
MerkleHellmanView_15=Iteration
MerkleHellmanView_16=Gleichung
MerkleHellmanView_17=Entschlüsseln
MerkleHellmanView_18=Ergebnis
MerkleHellmanView_19=Die Entschlüsselung führte zum gleichen Ergebnis wie der ursprüngliche Klartext.\nDie Bitfolgen sind identisch.\r\n
MerkleHellmanView_2=Anzahl der Elemente (|A|) des privaten Schlüssels A\:
MerkleHellmanView_20=Der Modul M muss größer sein als 
MerkleHellmanView_21=\nBitte geben Sie einen anderen Wert für M ein.
MerkleHellmanView_22a=Der Multiplikator W \= 
MerkleHellmanView_22b=muss kleiner sein als der Modul M \= 
MerkleHellmanView_23=\nBitte geben Sie einen anderen Wert für W oder M ein.
MerkleHellmanView_24=\nDer Modul M und der Multiplikator W sind nicht teilerfremd: 
MerkleHellmanView_24a=\nBitte wählen Sie andere Werte.
MerkleHellmanView_25=Der Modul M muß größer sein als 
MerkleHellmanView_26=\nBitte geben Sie einen anderen Wert für M ein.
MerkleHellmanView_27=Der Multiplikator W muss kleiner sein als der Modul M \= 
MerkleHellmanView_28=\nBitte geben Sie einen anderen Wert für W oder M ein. 
MerkleHellmanView_29=Der Modul M und der Multiplikator W sind nicht teilerfremd: ggT(M,W) \= 
MerkleHellmanView_3=Startwert (für die Wahl des ersten Elements des privaten Schlüssels A)\:
MerkleHellmanView_30=Die Entschlüsselung führte leider nicht zum gleichen Ergebnis wie der ursprüngliche Klartext.\nDie Bitfolgen sind nicht identisch.\r\n
MerkleHellmanView_31=ggT (M,W) \= 1 und 1 <\= W < M
MerkleHellmanView_32=ggT(M,W) \= 
MerkleHellmanView_33=Größte gemeinsame Teiler
MerkleHellmanView_34=\nBitte wählen Sie andere Werte.
MerkleHellmanView_35=Warnung
MerkleHellmanView_36=Frage
MerkleHellmanView_37=Möchten Sie die eingegebenen Werte für den privaten Schlüssel übernehmen?\nDer eingegebene private Schlüssel ist nicht stark wachsend.
MerkleHellmanView_4=Erzeuge privaten Schlüssel
MerkleHellmanView_5=Privater Schlüssel A
MerkleHellmanView_6=Öffentlicher Schlüssel B\: B(i) \= A(i) * W mod M, 1 <\= i < 
MerkleHellmanView_7=Erzeuge öffentlichen Schlüssel
MerkleHellmanView_8=Öffentlicher Schlüssel B
MerkleHellmanView_9=Verschlüsselung
MerkleHellmanView_lblBinaryRepresentationOf_text=Binärdarstellung von c\:
