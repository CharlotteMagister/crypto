#Eclipse modern messages class	
Tab0_Head0=eXtended Merkle-Signaturverfahren	
Tab0_Key_Button=XMSS-Schl\u00FCsselpaar erzeugen
MerkleTree_Generation_Info=Bitte erstellen Sie zuerst ein XMSS-Schl\u00FCsselpaar.
Tab0_MessageBox0=Sie haben erfolgreich ein XMSS-Schl\u00FCsselpaar erstellt.
Tab0_Txt0=Das eXtended Merkle signature scheme (XMSS) ist ein Verfahren, das auf der Merkle-Signaturverfahren basiert und dieses erweitert. Unterschied zum MSS-Verfahren ist der Einsatz von Bitmasken und sogenannten L-Trees. Durch diese Erweiterungen ist es m\u00f6glich, auf eine kollisionsresistente Hashfunktion zu verzichten und diese durch eine Zweite-Urbild-resistente Hashfunktion zu ersetzen. Vorteil des Einsatzes einer Zweiten-Urbild-resistenten Hashfunktion ist, dass die erzeugte Signatur kleiner wird, da Geburtstagsangriffe nicht zum Finden zweiter Urbilder verwendet werden k\u00f6nnen (weitere Informationen zum Geburtstagsangriff finden Sie in der Onlinehilfe). Das zweite Urbild ist auch schwerer zu brechen als die Kollisionsresistenz, da zu einer gegebenen Nachricht eine kollidierende Nachricht gefunden werden muss. Zum Brechen der Kollisionsresistenz gen\u00fcgt es, ein beliebiges Nachrichtenpaar zu finden, das kollidiert.
Tab0_Txt1=Das XMSS-Verfahren benutzt als Einmalsignatur die Winternitz One Time Signature (WOTS). Die beiden m\u00F6glichen Varianten sind WOTS+ oder WOTS$. In diesem Plug-in wird die Variante WOTS+ verwendet. Der Winternitz-Parameter w ist ein Parameter dieses Verfahrens. Die Gr\u00F6\u00DFe der Signatur h\u00E4ngt davon ab. Je gr\u00F6\u00DFer der Wert, desto kleiner werden die Signaturen, jedoch erh\u00F6ht sich auch der Berechnungsaufwand. Die Sicherheit wird nicht beeinflusst. Obwohl der Parameter beliebig gro\u00df gew\u00E4lt werden k\u00f6nnte, wird praktisch meist 4 und 16 verwendet. Mehr Informationen \u00fcber das WOTS-Verfahren finden Sie in der Hilfe.
Tab0_Txt2=Bei der Schl\u00FCsselerzeugung wird aus einem zuf\u00E4lligen Seed mithilfe eines kryptografischen Pseudozufallszahlengenerators eine beliebige, frei w\u00E4hlbare Anzahl von Einmalschl\u00fcsselpaaren und dazugehörigen L-Trees, sowie daraus der MerkleTree, generiert. In der Praxis ist die Anzahl der Einmalsignaturen immer eine Zweierpotenz (2^h), da dies die Verwendung eines vollst\u00E4ndigen Bin\u00E4rbaumes erm\u00f6glicht. 


Tab1_Head0=eXtended MerkleTree
Tab1_Txt0=Ausgangspunkt f\u00FCr den hier dargestellten eXtended MerkleTree (XMSS-Baum) sind sogenannte L-trees. Sie werden aus den \u00f6ffentlichen Einmalschl\u00fcsseln und dem Seed generiert. Die Wurzelknoten der L-trees bilden die Bl\u00E4tter des XMSS-Baums. Bevor jeweils zwei Bl\u00E4tter oder Knoten gehasht werden, wird noch eine XOR-Operation mit einer zuf\u00E4lligen Bitmaske durchgef\u00FChrt. Die Bitmasken werden aus dem \u00F6ffentlichen Seed abgeleitet und erh\u00F6hen die Sicherheit zus\u00E4tzlich.\r\n\r\nSignatur:\r\nZum Signieren einer Nachricht wird zuerst eine Einmalsignatur \u00fcber die Nachricht erstellt. Da pro Einmalschl\u00fcsselpaar nur eine Nachricht signiert werden kann, sind die Einmalschl\u00fcsselpaare von 0 bis (2^h)-1 nummeriert und werden nach dem jeweiligen Index des privaten XMSS-Schl\u00fcssels verwendet. Der Index wird bei jedem Signaturvorgang aktualisiert. Dadurch wird verhindert, dass ein Einmalschl\u00fcsselpaar mehrfach benutzt wird. Eine XMSS-Signatur besteht aus dem Index des Einmalschl\u00fcsselpaares, dem verwendeten Seed und der Einmalsignatur. Da bei der Signaturpr\u00FCfung der MerkleTree bis hin zum Wurzelknoten erneut berechnet und mit dem \u00F6ffentlichen XMSS-Schl\u00FCssel verglichen wird, muss zus\u00E4tlich der Inhalt der jeweils gegen\u00FCberliegenden Bl\u00E4tter und Knoten zur Signatur hinzugef\u00FCgt werden. Diese erg\u00E4nzende Information hei\u00DFt Authentifizierungspfad. Die Signaturerstellung k\u00F6nnen Sie im Reiter \u0022Signierung\u0022 auch Schritt f\u00FCr Schritt nachverfolgen.\r\nVerifikation:\r\nDer Vorgang wird im Reiter \u0022Verifikation\u0022 erkl\u00E4rt.\r\n\r\nSie k\u00F6nnen Bl\u00E4tter ausw\u00E4hlen um deren Hashwert anzuzeigen, sowie den Pfad zur Wurzel sowie den dazugeh\u00F6rigen Authentifikationspfad einf\u00E4rben zu lassen. Wenn Sie die Maus \u00FCber einen Knoten halten, erscheint auch dessen Hashwert.\r\nLegende: Gelb - Pfad eines Blattes/Knotens zur Wurzel. Rot - Knoten auf dem Authentifizierungspfad.
Tab1_Txt1=W\u00E4hlen Sie einen Knoten aus, dessen Hashwert Sie sehen wollen.

MerkleTreeVerify_0=Hier k\u00f6nnen Sie die im Reiter \u0022Signierung\u0022 erzeugte Signatur mit Hilfe des richtigen Knotens im MerkleTree verifizieren. Initial wird bei der Anzeige gleich das Blatt mit dem richtigen Index (gelber Pfad) ausgew\u00E4hlt. Sie k\u00f6nnen auch einen anderes Blatt mit falschem Index ausw\u00E4hlen - dann schl\u00E4gt die Verifikation fehl.\r\n\r\nF\u00FCr die Verifikation werden folgende Informationen ben\u00f6tigt:\r\n\u2022der \u00F6ffentliche XMSS-Schl\u00FCssel\r\n\u2022die XMSS-Signatur bestehend aus Index, \u00F6ffentlicher Seed, Einmalsignatur und Authentifizierungspfad\r\n\u2022die Nachricht\r\nF\u00FCr die Verifikation wird aus der Einmalsignatur und der Nachricht ein \u00f6ffentlicher Einmalschl\u00FCssel berechnet. Dieser \u00f6ffentliche Einmalschl\u00FCssel wird verwendet, um das verkn\u00FCpfte Blatt des L-Trees zu berechnen. Mit diesem Blatt und dem Authentifizierungspfad wird der Wurzelknoten berechnet. Wenn der errechnete Wert mit dem Wurzelknoten des \u00f6ffentlichen XMSS-Schl\u00FCssels \u00FCbereinstimmt, ist die Verifikation erfolgreich und die Signatur wird akzeptiert, ansonsten schl\u00E4gt die Verifikation fehl.

MerkleTreeKeyTab_0=Hier wird das XMSS-Schl\u00FCsselpaar angezeigt.\n\u2022 Der \u00f6ffentliche Schl\u00FCssel besteht aus dem Wurzelknoten und dem \u00F6ffentlichen Seed.\n\u2022 Der private Schl\u00FCssel besteht aus dem Index des n\u00e4chsten zu verwendenden Einmalsignaturschl\u00FCsselpaares, dem \u00F6ffentlichen sowie privaten Seed und allen privaten Einmalschl\u00FCsseln.

