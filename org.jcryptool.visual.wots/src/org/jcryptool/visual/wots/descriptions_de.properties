invalidChar_txt =Ung\u00fcltiges Zeichen
headline_txt=Winternitz Einmal-Signatur (WOTS / WOTS+)
header_txt =Die Winternitz Einmal-Signatur ist ein Algorithmus zum Signieren einer Nachricht.
message_txt =Nachricht
defaultMessage_txt =Standardnachricht
loadMessage_txt =Lade Nachricht aus Datei
winPara_txt =Winternitz-Parameter w
hashFunction_txt =Hashfunktion
privateKey_txt =Privater Schl\u00fcssel
publicKey_txt =\u00D6ffentlicher Schl\u00fcssel
signature_txt =Signatur
btnGenKeys_txt =Schl\u00fcssel erstellen
btnGenSig_txt =Signatur erstellen
btnVerSig_txt =Signatur pr\u00fcfen
btnReset_txt=Zur\u00fccksetzen
btnRestart_txt=Neustart
error_txt =Es ist ein Fehler aufgetreten
errorShort_txt=Fehler
showDetails_txt =Details anzeigen
hideDetails_txt =Details verstecken
byte_txt =Byte
hash_txt =Hash der Nachricht
outWelcome_txt =Das Winternitz Einmal-Signaturverfahren (Winternitz one-time signature -- WOTS) ist ein Hash-basiertes Verfahren zum digitalen Signieren von Nachrichten. Der öffentliche Schlüssel wird erzeugt, indem die zufällig erzeugten Blöcke des privaten Schlüssels iterativ gehasht werden. Die Anzahl der iterativen Hashes wird vom Winternitz-Parameter w\u22652 bestimmt: So wird jeder Block des privaten Schlüssels w-1 mal gehasht.\n\nBeim Erzeugen einer Signatur sind die Schritte ähnlich. Die Blöcke des privaten Schlüssels werden mehrfach gehasht (aber weniger oft als w-1 mal). Die Anzahl der Hash-Berechnungen wird durch die zu signierende Nachricht bestimmt. Da die Hashfunktion als One-Way-Funktion angenommen wird, ist es nicht möglich, von der berechneten Signatur auf den privaten Schlüssel zurückzuschließen.\n\nBei der Verifikation einer Signatur werden die verbliebenen Hash-Berechnungen ausgeführt, so dass jeder Block genau w-1 mal gehasht wurde. Wenn das Ergebnis mit dem öffentlichen Schlüssel übereinstimmt, ist die Signatur gültig.
outGenKeys_txt =Schl\u00fcsselerzeugung:\n\nBei der Schl\u00fcsselerzeugung von WOTS werden zuerst die Parameter t, n und w ermittelt.\n\nPrivater Schl\u00fcssel:\nEs werden t Bl\u00f6cke mit n zuf\u00e4lligen Bytes aufgef\u00fcllt.\n\n\u00D6ffentlicher Schl\u00fcssel:\nJeder Block des privaten Schl\u00fcssels durchl\u00e4uft w-1 mal die Hashfunktion. Das Resultat sind die Bl\u00f6cke des \u00f6ffentlichen Schl\u00fcssels.\n\nDetails und Formeln zur Berechnung der Parameter siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol dr\u00fccken)
outGenSig_txt =Signaturerzeugung:\n\nBei der Erstellung einer Signatur mit WOTS wird zuerst der Hash der Nachricht erzeugt und eine Pr\u00fcfsumme \u00fcber diesen berechnet.\n\nDiese beiden Werte werden in t Teile aufgeteilt und f\u00fcr das weitere Vorgehen als Integer-Werte b_i interpretiert.\n\n"Bei der Erstellung der Signatur werden die Bl\u00f6cke des privaten Schl\u00fcssels jeweils b_i mal gehashed.\n\nDetails und Formel zur Berechnung der Pr\u00fcfsumme siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol dr\u00fccken)
outVerSig_txt =Signaturpr\u00fcfung:\n\nBei der Pr\u00fcfung der Signatur mit WOTS werden zuerst die b_i Werte gleich wie bei der Signaturerstellung berechnet.\n\nDanach wird jeder Block der Signatur w-1-b_i mal gehashed, somit wurde der private Schl\u00fcssel nun insgesamt w-1 mal gehashed und es sollte jeder berechnete Block dem Wert des \u00f6ffentlichen Schl\u00fcssels entsprechen.\n\nDetails und Formel zur Berechnung der Pr\u00fcfsumme siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol dr\u00fccken)
outGenKeysPlus_txt =Schl\u00fcsselerzeugung:\n\nBei der Schl\u00fcsselerzeugung von WOTS+ werden zuerst die Parameter t, n und w ermittelt.\n\nPrivater Schl\u00fcssel:\nEs werden t Bl\u00f6cke mit n zuf\u00e4lligen Bytes aufgef\u00fcllt.\n\n\u00D6ffentlicher Schl\u00fcssel:\nZus\u00e4tzlich werden w-1 Bl\u00f6cke (R) zuf\u00e4llig generiert. Danach wird auf jeden Block des privaten Schl\u00fcssels in w-1 Runden zuerst ein XOR mit den Bl\u00f6cken R und danach die Hashfunktion angewandt.\nDer \u00f6ffentliche Schl\u00fcssel besteht nun aus den berechneten Bl\u00f6cken plus den vorangestellten Bl\u00f6cken von R.\n\nDetails und Formeln zur Berechnung der Parameter siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol dr\u00fccken)
outGenSigPlus_txt =Signaturerzeugung:\n\nBei der Erstellung einer Signatur mit WOTS+ wird zuerst der Hash der Nachricht erzeugt und eine Pr\u00fcfsumme \u00fcber diesen berechnet.Diese beiden Werte werden in t Teile aufgeteilt und f\u00fcr das weitere Vorgehen als Integer-Werte b_i interpretiert.\n\nBei der Erstellung der Signatur werden die Bl\u00f6cke des privaten Schl\u00fcssels nun jeweils in b_i Runden bearbeitet (jede Runde XOR + Hash).\n\nDetails und Formel zur Berechnung der Pr\u00fcfsumme siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol dr\u00fccken)
outVerSigPlus_txt =Signaturpr\u00fcfung:\n\nBei der Pr\u00fcfung der Signatur mit WOTS+ werden zuerst die b_i Werte gleich wie bei der Signaturerstellung berechnet.\n\nDanach wird jeder Block der Signatur in w-1-b_i Runden bearbeitet (jede Runde XOR + Hash), somit wurde der private Schl\u00fcssel nun insgesamt w-1 mal bearbeitet und es sollte jeder berechnete Block dem Wert des \u00f6ffentlichen Schl\u00fcssels entsprechen.\n\nDetails und Formel zur Berechnung der Pr\u00fcfsumme siehe Online-Hilfe (bitte F1 oder Fragezeichen-Symbol dr\u00fccken)
fileType_txt=Textdatei (.txt)