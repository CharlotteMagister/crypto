DefinitionAndDetails_0=Definitionen und Notationen
DefinitionAndDetails_1=Wir ordnen die n Benutzer in einem Baum mit mehreren Ebenen an, so dass es drei oberste Knoten gibt und jeder Knoten auf einer bestimmten Ebene vier Kinder auf der nächsten Ebene hervorbringt.
DefinitionAndDetails_10=Zusätzliche Notationen:\n
DefinitionAndDetails_11=R(i) = s(i) Q'; für ein gegebenes s(i) in GF(l).\n
DefinitionAndDetails_12=Paar(i_1, i_2) = e(R(i_1), S(i_2)) oder e(R(i_2), S(i_1)), abhängig vom PK-Schema.
DefinitionAndDetails_13=In der Visualisierungen gibt es:\n
DefinitionAndDetails_14=m(i) = (U(i)|1|Z(i)|Sg(i)), mit:\n
DefinitionAndDetails_15=Sg(i) = Sign(U(i)|1|Z(i)|r(1)|...|r(n), S(i)).\n
DefinitionAndDetails_16=Uj_Authenticated = Verify(m(j), P(j)), j abweichend von i.
DefinitionAndDetails_17=Details
DefinitionAndDetails_18=Nutzer i =
DefinitionAndDetails_19=PK(i) = Z(i)
DefinitionAndDetails_2=Wir nutzen für U(i) folgenden Bezeichnungen:\n
DefinitionAndDetails_20=\nNachrichten haben die Form: (U(i)|j|X(i,j)|Sg(i,j)), mit j = 2,3, X(i, j) = X(leftchildren(i)) if j=2 and X(rightchildren(i)) if j = 3, und Sg(i,j)=Sign(U(i)|j|X(i, j)|R(1)...R(n).\n
DefinitionAndDetails_21=Alle anderen Nutzer berechnen Verify(Sg(i), P(i)) und können dann X(i) benutzen.
DefinitionAndDetails_22=PK(i) = Z(i), R(i) oder {Z(i), R(i)}
DefinitionAndDetails_23=\nNachrichten haben die Form: (U(i)|1|PK(i)|Sg(i)), mit Sg(i)=Sign(U(i)|1|PK(i)|R(1)...R(n)).\n
DefinitionAndDetails_24=Alle anderen Nutzer berechnen Verify(Sg(i), P(i)) und können dann PK(i) nutzen.
DefinitionAndDetails_26=Zeige Definitionen und Notationen
DefinitionAndDetails_28=Zeige Details zu allen Nutzern
DefinitionAndDetails_3=Parent(U(i)) = U(floor(i/4)) if i>3; Intuitiv, der Vater aller Kind-Knoten.\n
DefinitionAndDetails_30=m(n + 2i-1) = (U(i)|2|X_{lc}(i)|Sg(lc, i)), mit:\n
DefinitionAndDetails_31=m(n + 2i) = (U(i)|3|X_{rc}(i)|Sg(rc, i)), mit:\n
DefinitionAndDetails_32=Sg(m, i) = Sign(U(i)|d|X_{m}(i)|r(1)|...|r(n), S(m, i));  d=2,3; m=lc, rc.\n
DefinitionAndDetails_33=Uj_Authenticated = Verify(m(n+j), P(j)), j verschieden von i.\n
DefinitionAndDetails_35=K(i) = e(Z(parent(i)), Z(sibling(i)))^(s(i)) Product_(j in Anc(i)) X(j).
DefinitionAndDetails_4=Left children of U(i) = {U(4i+2), U(4i+3)}; Wir zählen von außen nach innen gesehen links und rechts.\n
DefinitionAndDetails_5=Right children of U(i) = {U(4i), U(4i+1)}.\n
DefinitionAndDetails_6=Sibling(U(i)) = other child of U(i) from the same branch.\n
DefinitionAndDetails_7=Für U(1) = parent(U(1)) = U(2); sibling(U(1)) = U(3).\n
DefinitionAndDetails_8=Für U(2) = parent(U(2)) = U(3); sibling(U(2)) = U(1).\n
DefinitionAndDetails_9=Für U(3) = parent(U(3)) = U(1); sibling(U(3)) = U(2).
Illustration_0=Protokoll
Illustration_1=Schritt 1
Illustration_10=Der Angreifer kann s(i) nicht berechnen, obwohl er s(i)P kennt.
Illustration_11=Nutzer i kann leicht das X seiner Kinder mit s(i) berechnen.\n
Illustration_12=Der Angreifer kann s(i) nicht berechnen, obwohl er X kennt.
Illustration_13=Senden X(i)
Illustration_14=Schritt 4 (visualisiert)
Illustration_15=Jeder Nutzer i berechnet K(i) = e(Z(parent(i)), Z(sibling(i)))^(s(i)) Product_(j in Anc(i)) X(j) mod q.\n
Illustration_16=Nutzer i kann den Schlüssel leicht mit seinem s(i) berechnen.\n
Illustration_17=Der Angreifer kann s(i) nicht herausfinden und den Schlüssel nicht berechnen.
Illustration_18=Berechne Sitzungsschlüssel K
Illustration_19=Schritt 5 (visualisiert)
Illustration_2=Jeder Nutzer i wählt S(i), P(i), r(i) zur Authentifizierung aus.
Illustration_20=Überprüfen, dass alle Schlüssel gleich sind.
Illustration_21=Überprüfen
Illustration_22=Jeder Nutzer i wählt s(i) und berechnet Z(i) = s(i) P.
Illustration_23=Nutzer U(i) berechnet mit Ausnahme der Blätter X(leftchildren(i)) = (e(Z(parent(i)), Z(sibling(i))/e(Z(leftchild1(i)), Z(leftchild2(i))))^s(i) mod q \n
Illustration_24=und X(rightchildren(i)) = (e(Z(parent(i)), Z(sibling(i))/e(Z(rightchild1(i)), Z(rightchild2(i))))^s(i) mod q.
Illustration_25=Jeder Nutzer i berechnet K(i) = e(Z(parent(i)), Z(sibling(i)))^(s(i)) Product_(j in Anc(i)) X(j) mod q.
Illustration_26=Jeder Nutzer i wählt s(i); berechnet Z(i) = s(i) P und/oder R(i) = s(i)Q'.
Illustration_27=Nutzer U(i) berechnet mit Ausnahme der Blätter X(leftchildren(i)) = (Paar(parent(i), sibling(i))/Paar(leftchild1(i), leftchild2(i)))^s(i) mod q \n
Illustration_28=und X(rightchildren(i)) = (Paar(parent(i), sibling(i)/Paar(rightchild1(i), rightchild2(i)))^s(i) mod q.
Illustration_29=Jeder Nutzer i berechnet K(i) = Paar(parent(i), sibling(i))^s(i) Product_(j in Anc(i)) X(j) mod q.
Illustration_3=Generieren
Illustration_4=Schritt 2 (visualisiert)
Illustration_5=Jeder Nutzer i wählt s(i)\nDer Nutzer kann leicht aus PK(i) s(i) berechnen.\nDer Angreifer kann s(i) nicht berechnen, obwohl er s(i)P kennt.
Illustration_6=Senden PK(i)
Illustration_7=Schritt 3 (visualisiert)
Illustration_8=Nutzer U(i) berechnet mit Ausnahme der Blätter X(leftchildren(i)) = (e(Z(parent(i)), Z(sibling(i))/e(Z(leftchild1(i)), Z(leftchild2(i))))^s(i) mod q\n
Illustration_9=und X(rightchildren(i)) = (e(Z(parent(i)), Z(sibling(i))/e(Z(rightchild1(i)), Z(rightchild2(i))))^s(i) mod q.\n
IntroductionAndParameters_0=Multipartite Key Exchange
IntroductionAndParameters_1=Mehr als 3 Benutzer möchten sicher über das Internet kommunizieren. Dazu wollen eine symmetrische Verschlüsselung verwenden. Dafür müssen sie zunächst einen gemeinsamen Konferenzschlüssel austauschen. Dies kann mit Pairings geschehen. Pairings sind bilineare, nicht-degenerierte Funktionen e, die zwei elliptische Kurvenpunkte (P,Q) auf ein finites Feldelement k abbilden. Die n Benutzer können je nach den gewünschten Sicherheitsspezifikationen zwischen mehreren Arten von Pairings wählen. Dies ist eine Erweiterung des Diffie-Hellman-Schlüsselaustauschprotokolls.
IntroductionAndParameters_16=Initiale Einstellungen (können angepasst werden)
IntroductionAndParameters_17=Eingebetteter Grad k
IntroductionAndParameters_18=12 (kleinere Parameter)
IntroductionAndParameters_19=2 (größere Parameter)
IntroductionAndParameters_20=Sicherheitsstufe
IntroductionAndParameters_21=Stift und Papier (8 bit = schneller)
IntroductionAndParameters_22=Produktive Sicherheit (512 bit = langsamer)
IntroductionAndParameters_23=Anzahl an Nutzern n>3:
IntroductionAndParameters_24=Die Visualisierung weiter unten kann maximal 15 Nutzer anzeigen. Es können jedoch mehr Nutzer ausgewählt werden, diese werden in der Visualisierung aber nicht angezeigt.
IntroductionAndParameters_25=Pairing-Typ
IntroductionAndParameters_26=Tate-Pairing (schneller)
IntroductionAndParameters_27=Weil-Pairing (langsamer)
IntroductionAndParameters_28=Pairing, so dass e(P, P) \!= 1
IntroductionAndParameters_3=Aus Performancegründen können maximal 100 Nutzer eingestellt werden.
IntroductionAndParameters_49=, Einstellungsparameter
IntroductionAndParameters_50=36u^4 + 36u³ + 24u² + 6u + 1, prim
IntroductionAndParameters_51=Elliptische Kurve: y² = x³ + 3
IntroductionAndParameters_52=Elliptische Kurve über GF(q^12), 1/6 von E.
IntroductionAndParameters_53=36u^4 + 36u³ + 18u² + 6u + 1,  prim, l = \#E(GF(q))
IntroductionAndParameters_54=auf E', ord(Q') = l, erhalten aus Q auf E, Q ist nicht in <P>
IntroductionAndParameters_55=12, der eingebettete Grad
IntroductionAndParameters_56=Pairing, so dass e(P, Q') \!= 1
IntroductionAndParameters_57=512-bit Primzahl
IntroductionAndParameters_58=160-bit Primzahl, l|\#E(GF(q))
IntroductionAndParameters_59=Punkt auf E, ord(P) = l
IntroductionAndParameters_6=Initiale Parameter
IntroductionAndParameters_60=103
IntroductionAndParameters_61=13
IntroductionAndParameters_62=(26, 35)
IntroductionAndParameters_63=modifiziertes Tate-Pairing
IntroductionAndParameters_64=modifiziertes Weil-Pairing
IntroductionAndParameters_65=2, der eingebettete Grad
Logging_0=Logging
Logging_1=Im letzten Lauf waren die Rechenzeiten der Nutzer:
Logging_10=Log konnte nicht gespeichert werden\!\nBitt wählen Sie einen anderen Speicherort oder Dateinamen aus.
Logging_2=Zeit pro belastetem Nutzer
Logging_3=Zeit pro unbelastetem Nutzer
Logging_4=Ergebnisse speichern
Logging_6=Log.txt
Logging_7=Textdatei (*.txt)
Logging_8=*.txt
Logging_9=Datei nicht gefunden.
