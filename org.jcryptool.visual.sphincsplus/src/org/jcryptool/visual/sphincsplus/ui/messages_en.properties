#Generated by ResourceBundle Editor (http://essiembre.github.io/eclipse-rbe/)

# Tab descriptions
SphincsPlusTab_1 = Parameters and Key Generation
SphincsPlusTab_2 = Sign and Verify
SphincsPlusTab_3 = SPHINCS+ HyperTree 
SphincsPlusTab_4 = SPHINCS+ FORS

# SphincsPlusParameterView
SphincsPlusParameterView_headLabel = SPHINCS+ Signature
SphincsPlusParameterView_headDescription = SPHINCS+ is a stateless hash-based signature scheme. The design enhances the SPHINCS signature scheme (also a plugin in JCT). SPHINCS+ incorporates multiple improvements, especially aimed at reducing the signature size. It consists of the following components: \u2022 WOTS+: a one-time signature scheme (another JCT plugin). \u2022 XMSS: a many-time signature scheme which uses hypertree signatures (another JCT plugin). \u2022 FORS: a few-time signature scheme used to sign the message.
SphincsPlusParameterView_parameterGroup = Parameter
SphincsPlusParameterView_descriptionGroup = Description
SphincsPlusParameterView_secretKeyGroup = Secret and public key components
SphincsPlusParameterView_publicKeyGroup = Public Key Components
SphincsPlusParameterView_label_security_level = Security
SphincsPlusParameterView_label_characters = Hex characters
SphincsPlusParameterView_btn_generateKeys_set = Set keys
SphincsPlusParameterView_btn_generateKeys_generate = Generate keys
SphincsPlusParameterView_parameterDescription = You can choose between 6 proposed parameter sets and 2 different hash algorithms.\nThese parameter sets target different security levels and different trade offs between size and speed. The parameter sets ending on 's' for "small" are speed-optimized, and the ones ending on 'f' for "fast" are speed-optimized.\n\u2022 n: The security parameter; it is the message length as well as the length of a private key, public key, or signature element in bytes\n\u2022 h: The height of the hypertree\n\u2022 d: The numbers of layers in the hypertree\n\u2022 log(t): The height of a tree in FORS\n\u2022 k: The number of trees in FORS\n\u2022 w: The Winternitz parameter; it is an element of the set {4,16,256}\n\u2022 bitsec: Shows the bit security\n\u2022 sec level: Shows the security level according to the levels specified here\n\u2022 sig bytes: Shows the size of the signature in bytes\n\u2022 RANDOMIZE: Brings in randomness when generating a signature. Setting this option to "Yes" avoids that SPHINCS+ signatures are deterministic.\n 
SphincsPlusParameterView_btnCheckButton_parameter = Enter parameters manually 
SphincsPlusParameterView_btnCheckButton_keys = Enter keys manually
SphincsPlusParameterView_btnCheckButton_randomize = Randomize
SphincsPlusParameterView_messageBox_enter_parameter_manually_message = Please enter only SPHINCS+ conform values!\nSee documentation.
SphincsPlusParameterView_messageBox_enter_parameter_manually_info = Caution
SphincsPlusParameterView_messageBox_no_sk_seed_entered_message = Please enter all keys with the correct length!\nThe entered value for SK.seed is too short.
SphincsPlusParameterView_messageBox_no_pk_seed_entered_message = Please enter all keys with the correct length!\nThe entered value for PK.seed is too short.
SphincsPlusParameterView_messageBox_no_sk_prf_entered_message = Please enter all keys with the correct length!\nThe entered value for SK.prf is too short.
SphincsPlusParameterView_messageBox_no_pk_root_entered_message = Please enter all keys with the correct length!\nThe entered value for PK.root is too short.
SphincsPlusParameterView_messageBox_no_keys_entered_info = Missing/incomplete input
SphincsPlusParameterView_messageBox_switch_to_hex_message = Please select the hex representation first.
SphincsPlusParameterView_messageBox_switch_to_hex_info = Wrong character representation
SphincsPlusParameterView_combo_randomize_yes = Yes
SphincsPlusParameterView_combo_randomize_no = No
SphincsPlusParameterView_messageBox_parameter_empty_message = Not all parameters have been entered.\nTherefore, now the values of the proposed parameter set will be used.
SphincsPlusParameterView_messageBox_parameter_empty_info = Parameter missing
SphincsPlusParameterView_messageBox_continue_in_second_tab_message = The value of PK.root has been adjusted.\nYou can now proceed in the second tab.
SphincsPlusParameterView_messageBox_continue_in_second_tab_message_2 = You can now proceed in the second tab.
SphincsPlusParameterView_messageBox_continue_in_second_tab_info = Keys saved

# SphincsPlusSignAndVerifyView
SphincsPlusSignAndVerifyView_messageGroup_part_1 = Message (current length 
SphincsPlusSignAndVerifyView_messageGroup_part_2 = minimal 
SphincsPlusSignAndVerifyView_text_inputMessage = Please enter a message to be signed !   
SphincsPlusSignAndVerifyView_text_sig_description = Generating a SPHINCS+ signature consists of four steps:\n1. R: A random value R is pseudo-randomly generated. When computing R, the pseudo-random function (PRF) takes a n-byte string as input which is initialized with zero but can be overwritten with randomness if the global variable RANDOMIZE is set (RANDOMIZE can be set in the first sub-tab "Parameters and Key Generation").\n2. This R is used to compute an m byte message digest which is split into different parts.\n3. SIG FORS: A FORS signature is a length k(log t + 1) array of n-byte strings. It contains k private key values, n-bytes each, and their associated authentication paths, log t n-byte values each.\n4. SIG HT: A hypertree signature is a byte string of length (h + d * len) * n. It consists of d XMSS signatures of (h/d + len) * n bytes each.
SphincsPlusSignAndVerifyView_signButtonGroup = Sign and verify
SphincsPlusSignAndVerifyView_btn_sign = Sign message
SphincsPlusSignAndVerifyView_btn_verify = Verify signature
SphincsPlusSignAndVerifyView_lbl_status_signed = Signed
SphincsPlusSignAndVerifyView_lbl_status_verified = Verification OK
SphincsPlusSignAndVerifyView_lbl_status_verification_failed = Verification FAILED
SphincsPlusSignAndVerifyView_lbl_status_text_changed = Message has CHANGED
SphincsPlusSignAndVerifyView_no_key_message = Please generate the keys first (in the first tab).
SphincsPlusSignAndVerifyView_no_key_info = No keys generated
SphincsPlusSignAndVerifyView_sign_first_message = Please sign the message first.
SphincsPlusSignAndVerifyView_sign_first_info = No signature
SphincsPlusSignAndVerifyView_encodingButtonGroup = Character encoding:
SphincsPlusSignAndVerifyView_valueGroup = Signature values
SphincsPlusSignAndVerifyView_descriptionGroup = Description
SphincsPlusSignAndVerifyView_text_info_inputMessage_part_1 = The message to be signed must have the following minimum length: 
SphincsPlusSignAndVerifyView_text_info_inputMessage_part_2 = \nSigning can take a few seconds.\nThe signature is then in the fields "Signature values".
SphincsPlusSignAndVerifyView_infoGroup = Information

# SphincsPlusTreeView
SphincsPlusTreeView_descLabel = SPHINCS+ HyperTree
SphincsPlusTreeView_collapsedPart_expanded = Hide description
SphincsPlusTreeView_collapsedPart_collapsed = Show description
SphincsPlusTreeView_descText_general = The following SPHINCS+ hypertree (HT) helps to become familiar with all the components and to understand the process of generating the keys and a signature.\nThe HT is a tree of several layers of XMSS trees. The trees on top and intermediate layers are used to sign the public keys, i.e., the root nodes of the XMSS trees on the respective next layer below. Trees on the lowest layer are used to sign the actual messages, which are FORS public keys in SPHINCS+.\nAll XMSS trees in HT have equal height. Consider a HT of total height h that has d layers of XMSS trees of height h' = h/d. Then layer d-1 contains one XMSS tree, layer d-2 contains 2^h' XMSS trees, and so on. Finally, layer 0 contains 2^(h-h') XMSS trees.\nThe following values are used for this tree: h = 4, d = 2.\n\u2022 Height of one XMSS tree: h' = (4 / 2) = 2\n\u2022 Trees of layer d-1 = 1\n\u2022 Tress of layer d-2 (layer 0) = 2^(h-h') = 2^(4-2) = 4\nMore Information is shown by clicking on a component of the HT.
SphincsPlusTreeView_descText_root_node_d = SPHINCS+ public key = HT public key is the public key (root node) of the single XMSS tree at the top level.
SphincsPlusTreeView_descText_root_node_XMSS = Root node of the XMSS tree. Used to calculate the tree above.

# SphincsPlusForsView
SphincsPlusForsView_descLabel = SPHINCS+ FORS
SphincsPlusForsView_collapsedPart_expanded = Hide description
SphincsPlusForsView_collapsedPart_collapsed = Show description
SphincsPlusForsView_description_rootNode = In the context of SPHINCS+, the FORS public key is never generated alone. It is only generated together with a signature.
SphincsPlusForsView_descText_general = The SPHINCS+ hypertree HT is not used to sign the actual messages but the public keys of FORS instances which in turn are used to sign message digests.